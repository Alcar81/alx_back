// üìÅ backend/tests/testAdmin.js
const fetch = require("node-fetch");
const PORT = process.env.SERVER_PORT;
const ENV = process.env.ENV || "dev"; // üåç r√©cup√®re l‚Äôenvironnement
const ADMIN_TEST_TOKEN = process.env.ADMIN_TEST_TOKEN;

// üõ°Ô∏è V√©rifie les variables n√©cessaires
if (!PORT) {
  console.error("‚ùå SERVER_PORT non d√©fini dans process.env");
  process.exit(1);
}

if (ENV === "prod") {
  console.warn("‚ö†Ô∏è Test Admin d√©sactiv√© en production.");
  process.exit(0);
}

if (!ADMIN_TEST_TOKEN) {
  console.error("‚ùå ADMIN_TEST_TOKEN manquant dans .env !");
  process.exit(1);
}

const BASE_URL = `http://localhost:${PORT}`;

async function testAdminRoute() {
  try {
    console.log("üß™ Test d'acc√®s √† /api/admin/public...");

    const response = await fetch(`${BASE_URL}/api/admin/public`, {
      headers: {
        Authorization: `Bearer ${ADMIN_TEST_TOKEN}`,
      },
    });

    if (response.ok) {
      console.log("‚úÖ Acc√®s Admin OK.");
      process.exit(0);
    } else if (response.status === 403) {
      console.warn("‚ö†Ô∏è Acc√®s interdit (403) ‚ûú r√¥le ADMIN absent ?");
      process.exit(1);
    } else {
      console.warn(`‚ö†Ô∏è √âchec - code ${response.status}`);
      process.exit(1);
    }
  } catch (error) {
    console.error("‚ùå Erreur lors du test Admin :", error.message);
    process.exit(1);
  }
}

testAdminRoute();
