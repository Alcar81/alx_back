# Dockerfile.backend

# Étape 1 : Utiliser une image Node.js 20 Alpine
FROM node:20-alpine AS builder

# Étape 2 : Installer les dépendances système
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    libpq \
    bash \
    file

# Étape 3 : Mise à jour de npm
RUN npm install -g npm@latest --force
RUN echo "npm version : $(npm --version)"

# Étape 4 : Définir le répertoire de travail
WORKDIR /app

# Étape 5 : Copier les fichiers package.json et installer les dépendances
COPY package*.json ./
RUN npm install --production --loglevel=warn
RUN npm install --save-dev prisma@latest @prisma/client@latest --force

# Étape 6 : Copier tout le code source (y compris prisma/schema.prisma et .gitignore)
COPY . .

# Vérification de la copie des fichiers
RUN echo "=== Vérification des fichiers ===" && ls -la /app

# Étape 7 : Générer le client Prisma
RUN npx prisma generate

# Étape 8 : Nettoyer le cache npm
RUN npm cache clean --force

# Étape finale : Créer une image allégée
FROM node:20-alpine
WORKDIR /app
COPY --from=builder /app /app

# Exposer le port utilisé
EXPOSE 7000

# Lancer le backend
CMD ["node", "server.js"]